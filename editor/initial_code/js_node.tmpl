{% comment %}New initial code template{% endcomment %}
{% block env %}import assert from "assert";{% endblock env %}

{% block start %}
function cistercian(image: string[][]): number {
    // your code here
    return 0;
}
{% endblock start %}

{% block example %}
console.log('Example:');
console.log(cistercian([
    [' ', ' ', '0', ' ', '0'],
    [' ', '0', '0', '0', ' '],
    ['0', ' ', '0', ' ', ' '],
    [' ', ' ', '0', ' ', ' '],
    [' ', ' ', '0', '0', '0'],
    [' ', ' ', '0', ' ', ' '],
    ['0', '0', '0', ' ', ' ']]));
{% endblock %}

// These "asserts" are used for self-checking
{% block tests %}
{% for t in tests %}
assert.strictEqual({% block call %}cistercian({{t.input|j_args}})
{% endblock %}, {% block result %}{{t.answer|j}}{% endblock %});{% endfor %}
{% endblock %}

{% block final %}
console.log("Coding complete? Click 'Check Solution' to earn rewards!");
{% endblock final %}
